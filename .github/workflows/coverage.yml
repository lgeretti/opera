name: Coverage

on:
  push:
    branches:
    - main
    - kafka
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Get Concurrency
      run: echo NPROC="nproc" >> $GITHUB_ENV

    - name: Set Up Dependencies
      run: |
        sudo add-apt-repository ppa:ariadne-cps/ariadne
        sudo apt install -y cmake ninja-build pkg-config lcov clang-11 g++-10 librdkafka-dev rapidjson-dev ariadne
        export KAFKA_PARENT_DIR=~
        cd $KAFKA_PARENT_DIR
        wget https://archive.apache.org/dist/kafka/2.8.0/kafka-2.8.0-src.tgz
        tar -xvf kafka-2.8.0-src.tgz
        cd kafka-2.8.0-src
        ./gradlew jar -PscalaVersion=2.13.5
        cd bin
        ln -s zookeeper-server-start.sh zookeeper-server-start
        ln -s kafka-server-start.sh kafka-server-start
        ln -s zookeeper-server-stop.sh zookeeper-server-stop
        ln -s kafka-server-stop.sh kafka-server-stop
        ln -s kafka-topics.sh kafka-topics
        echo "$KAFKA_PARENT_DIR/kafka-2.8.0-src/bin" >> $GITHUB_PATH

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=g++-10 -G "Ninja" -DCOVERAGE=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel $($NPROC)

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: test/test_kafka

    - name: Generate Code Coverage
      working-directory: ${{runner.workspace}}/opera
      run: |
        lcov --directory ${{runner.workspace}}/build --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
        bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"